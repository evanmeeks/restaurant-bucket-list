import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  SafeAreaView,
  TouchableOpacity,
  Platform,
  ScrollView,
} from 'react-native';
import { useNavigation, useRoute, RouteProp
} from '@react-navigation/native';
import { Ionicons
} from '@expo/vector-icons';
import { Avatar
} from '@rneui/themed'; // Use Avatar from RNE instead of Image
import { RootStackParamList
} from '../../../navigation/types';
import { Alert
} from 'react-native';

type DetailScreenRouteProp = RouteProp<RootStackParamList, 'Detail'>;

export const DetailScreen: React.FC = () => {
  const navigation = useNavigation();
  const route = useRoute<DetailScreenRouteProp>();

  // Make sure itemData exists before using it
  const venue = route.params?.itemData;

  // Fallback for when no venue data is passed
  if (!venue) {
    return (
      <SafeAreaView style={styles.container
    }>
        <View style={styles.errorContainer
    }>
          <Ionicons name="alert-circle-outline" size={
      64
    } color="#FF4500" />
          <Text style={styles.errorText
    }>Venue data not available</Text>
          <TouchableOpacity
            style={styles.backButton
    }
            onPress={() => navigation.goBack()
    }
          >
            <Text style={styles.backButtonText
    }>Go Back</Text>
          </TouchableOpacity>
        </View>
      </SafeAreaView>
    );
  }
  // Using placeholder data if specific data isn't available
  const venueName = venue.name || 'Restaurant';
  const venueCategory = venue.categories && venue.categories.length > 0
    ? venue.categories[
    0
  ].name
    : 'Restaurant';
  const venueAddress = venue.location?.formattedAddress || 'Address not available';

  // Safely access the icon property
  let iconSrc = 'https: //ss3.4sqi.net/img/categories_v2/food/default_64.png';
  if (
    venue.categories &&
    venue.categories.length > 0 &&
    venue.categories[
    0
  ].icon &&
    venue.categories[
    0
  ].icon.prefix &&
    venue.categories[
    0
  ].icon.suffix
  ) {
    iconSrc = `${venue.categories[
        0
      ].icon.prefix
    }64${venue.categories[
        0
      ].icon.suffix
    }`;
  }

  return (
    <SafeAreaView style={styles.container
  }>
      <ScrollView>
        <View style={styles.header
  }>
          <TouchableOpacity
            style={styles.backIconButton
  }
            onPress={() => navigation.goBack()
  }
          >
            <Ionicons name="arrow-back" size={
    24
  } color="#333333" />
          </TouchableOpacity>
          <Text style={styles.headerTitle
  }>{venueName
  }</Text>
          <View style={
    { width: 24
    }
  } /> { /* Empty view for layout balance */}
        </View>

        <View style={styles.imageContainer
  }>
          { /* Using Avatar from react-native-elements instead of Image */}
          <Avatar
            source={
    { uri: iconSrc
    }
  }
            size={
    100
  }
            containerStyle={styles.venueImage
  }
          />
        </View>

        <View style={styles.detailsContainer
  }>
          <Text style={styles.venueName
  }>{venueName
  }</Text>
          <Text style={styles.venueCategory
  }>{venueCategory
  }</Text>
          <Text style={styles.venueAddress
  }>{venueAddress
  }</Text>

          {venue.location && venue.location.lat && venue.location.lng ? (
            <View style={styles.mapPlaceholder
    }>
              <Text style={styles.mapPlaceholderText
    }>
                Map would display here at coordinates: {venue.location.lat
    },
    {venue.location.lng
    }
              </Text>
            </View>
          ) : null
  }

          <View style={styles.actionsContainer
  }>
            <TouchableOpacity
              style={styles.actionButton
  }
              onPress={() => Alert.alert('Save', 'Restaurant saved to your bucket list')
  }
            >
              <Ionicons name="bookmark-outline" size={
    24
  } color="#FFFFFF" />
              <Text style={styles.actionButtonText
  }>Save</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.actionButton
  }
              onPress={() => Alert.alert('Share', 'Sharing functionality would go here')
  }
            >
              <Ionicons name="share-outline" size={
    24
  } color="#FFFFFF" />
              <Text style={styles.actionButtonText
  }>Share</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.actionButton
  }
              onPress={() => Alert.alert('Directions', 'Map directions would open here')
  }
            >
              <Ionicons name="navigate-outline" size={
    24
  } color="#FFFFFF" />
              <Text style={styles.actionButtonText
  }>Directions</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 12,
    backgroundColor: '#FFFFFF',
    ...Platform.select({
      ios: {
        shadowColor: "#000",
        shadowOffset: { width: 0, height: 2
        },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      android: {
        elevation: 3,
      },
    }),
  },
  backIconButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333333',
  },
  imageContainer: {
    height: 200,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F8F8F8',
  },
  venueImage: {
    width: 100,
    height: 100,
    borderRadius: 8,
  },
  detailsContainer: {
    padding: 16,
  },
  venueName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333333',
    marginBottom: 8,
  },
  venueCategory: {
    fontSize: 16,
    color: '#666666',
    marginBottom: 12,
  },
  venueAddress: {
    fontSize: 14,
    color: '#999999',
    marginBottom: 20,
  },
  mapPlaceholder: {
    height: 200,
    backgroundColor: '#F0F0F0',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 8,
    marginBottom: 20,
  },
  mapPlaceholderText: {
    color: '#666666',
    textAlign: 'center',
    padding: 16,
  },
  actionsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  actionButton: {
    flex: 1,
    backgroundColor: '#FF4500',
    padding: 12,
    borderRadius: 8,
    marginHorizontal: 4,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
  },
  actionButtonText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
    marginLeft: 8,
  },
  errorContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  errorText: {
    fontSize: 18,
    color: '#666666',
    marginTop: 12,
    marginBottom: 24,
  },
  backButton: {
    backgroundColor: '#FF4500',
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 8,
  },
  backButtonText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
});

export default DetailScreen;